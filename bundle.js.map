{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Helpers.js","../src/components/GalleryNavButton.svelte","../src/components/GalleryControls.svelte","../src/components/Gallery.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.callbacks.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${JSON.stringify(value)}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, _oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, add_transform, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, is_client, now, raf, set_now, set_raf, globals, destroy_block, outro_and_destroy_block, fix_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, add_attribute, add_classes, group_outros, check_outros, transition_in, transition_out, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, once, bind, mount_component, destroy_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","// A list of static images, thanks to unsplash\r\n/*\r\n\tThe list of images used in the gallery as demo images\r\n\r\n\tThanks to unsplash (https://unsplash.com) and the photographers ...\r\n\t\tSepp Rutz on Unsplash\r\n\t\tKeith Luke on Unsplash\r\n\t\tPang Yuhao on Unsplash\r\n\t\tHåkon Sataøen on Unsplash\r\n\t\tErik Mclean on Unsplash\r\n\t\tLance Asper on Unsplash\r\n\t\tJohn Fowler on Unsplash\r\n\t\tZQ Lee on Unsplash\r\n\t\tPascal Habermann on Unsplash\r\n\t\tKrisjanis Mezulis on Unsplash\r\n\t\tJosh Sorenson on Unsplash\r\n\t\r\n\r\n*/\r\nexport const images = [\r\n\t\"images/zq-lee-VbDjv8-8ibc-unsplash.jpg?v=1561796309182\",\r\n\t// \"images/krisjanis-mezulis-Ndz3w6MCeWc-unsplash.jpg?v=1561796310554\",\r\n\t// \"images/sepp-rutz-tskqMngoHSA-unsplash.jpg?v=1561796311981\",\r\n\t\"images/erik-mclean-WhRsHmFtFXQ-unsplash.jpg?v=1561796313563\",\r\n\t// \"images/josh-sorenson-Z33d85enIBI-unsplash.jpg?v=1561796314943\",\r\n\t\"images/pang-yuhao-wCi28eq8TF4-unsplash.jpg?v=1561796316818\",\r\n\t\"images/hakon-sataoen-XFiY4FZj8ZE-unsplash.jpg?v=1561796317836\",\r\n\t\"images/john-fowler-aaIN3y2zcMQ-unsplash.jpg?v=1561796318194\",\r\n\t// \"images/sepp-rutz-hZQOby6ZdIE-unsplash.jpg?v=1561796318251\",\r\n\t// \"images/pascal-habermann-A6hoSqrce5U-unsplash.jpg?v=1561796318397\",\r\n\t// \"images/lance-asper-5Kp5LVjINgI-unsplash.jpg?v=1561796323607\",\r\n\t\"images/keith-luke-TAm2z1TOges-unsplash.jpg?v=1561796324012\"\r\n];\r\n\r\n/**\r\n * Just a helper method to wait a little while\r\n */\r\nexport async function wait(ms) {\r\n\treturn new Promise(resolve => {\r\n\t\tsetTimeout(resolve, ms);\r\n\t});\r\n}\r\n","<script>\r\n  // Loading event dispatcher - allows us to send events to parent components\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  // Definition of the component's properties\r\n  export let position, visible;\r\n\r\n  // Instantiating our dispatcher\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // Computing some styles via reactive statements\r\n  $: arrowClass = \"arrow\" + (position === \"left\" ? \" arrow-left\" : \"\");\r\n  $: containerClass = () => {\r\n    const btnDirection =\r\n      position === \"left\" ? \"btnContainer-left\" : \"btnContainer-right\";\r\n    return `btnContainer ${btnDirection}`;\r\n  };\r\n\r\n  /**\r\n   * Event method when a gallery navigation button is pressed\r\n   * Sends an event upwards to our parent component\r\n   */\r\n  const onClick = () => {\r\n    dispatch(\"navigate\", {});\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .btnContainer {\r\n    position: absolute;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    border-radius: 0.25rem;\r\n    padding: 0.6rem;\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n\r\n  .btnContainer-left {\r\n    left: 0;\r\n  }\r\n\r\n  .btnContainer-right {\r\n    right: 0;\r\n  }\r\n\r\n  .btnContainer:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    /* padding: 1.2rem; */\r\n  }\r\n\r\n  .arrow {\r\n    transform: scale(0.5);\r\n    stroke: none;\r\n    fill: white;\r\n  }\r\n\r\n  .arrow-left {\r\n    transform: rotate(180deg) scale(0.5);\r\n  }\r\n</style>\r\n\r\n{#if visible}\r\n  <div on:click={onClick} class={containerClass()}>\r\n    <svg class={arrowClass} width=\"64\" height=\"64\" viewBox=\"0 0 64 64\">\r\n      <path d=\"M 10 0 L 30 0 L 60 30 L 30 60 L 10 60 L 40 30 L 10 0\" />\r\n    </svg>\r\n  </div>\r\n{/if}\r\n","<script>\r\n  // Loading event dispatcher - allows us to send events to parent components\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  // Definition of the component's properties\r\n  export let numberOfImages, currentIndex;\r\n\r\n  // Instantiating our dispatcher\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // Create a dummy array to iterate in the <ul>  TODO: There must be a better way...\r\n  let iter = new Array(numberOfImages);\r\n\r\n  /**\r\n   * Event method when a gallery navigation control is pressed\r\n   * Sends an event upwards to our parent component\r\n   */\r\n  const onClick = toIndex => {\r\n    dispatch(\"navigateToIndex\", toIndex);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .controls {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    text-align: center;\r\n\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    color: white;\r\n\r\n    border-bottom-left-radius: 0.25rem;\r\n    border-bottom-right-radius: 0.25rem;\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n    line-height: 40px;\r\n    list-style: none;\r\n    margin: 0;\r\n    justify-content: center;\r\n  }\r\n\r\n  li {\r\n    padding-left: 0.4rem;\r\n    padding-right: 0.4rem;\r\n    line-height: 50px;\r\n  }\r\n\r\n  .circle {\r\n    fill: rgba(255, 255, 255, 0.5);\r\n    height: 20px;\r\n  }\r\n\r\n  .circle:hover,\r\n  .circle-selected {\r\n    fill: rgba(255, 255, 255, 1);\r\n  }\r\n</style>\r\n\r\n<div class=\"controls\">\r\n  <ul>\r\n    {#each iter as dummy, idx}\r\n      <li>\r\n        <svg\r\n          on:click={() => onClick(idx)}\r\n          class=\"circle {idx === currentIndex ? ' circle-selected' : ''}\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 120 120\"\r\n          version=\"1.1\">\r\n          <circle cx=\"60\" cy=\"60\" r=\"50\" />\r\n        </svg>\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n</div>\r\n","<script>\r\n  // Import the wait helper classes\r\n  import { wait } from \"../Helpers.js\";\r\n\r\n  // Importing our components\r\n  import Loader from \"./Loader.svelte\";\r\n  import GalleryNavButton from \"./GalleryNavButton.svelte\";\r\n  import GalleryControls from \"./GalleryControls.svelte\";\r\n\r\n  // Definition of the component's properties\r\n  export let images,\r\n    height = \"\",\r\n    maxWidth = \"\",\r\n    autoRun = false,\r\n    timer = 2000;\r\n\r\n  // Here we prepare the index for the first image.\r\n  let currentImageIndex = 0; // the displaying itself is controlled by 'imageCount'\r\n  let keepAutorunRunning = false;\r\n\r\n  // This reactive if is called, wehenever the autoRun property changed\r\n  // Then it sets the 'keepAutorunRunning' and starts doAutorun() if needed\r\n  $: if (autoRun) {\r\n    keepAutorunRunning = true;\r\n    doAutorun();\r\n  } else {\r\n    keepAutorunRunning = false;\r\n  }\r\n\r\n  // Calculating the image count via a reactive statement\r\n  $: imageCount =\r\n    !images || !Array.isArray(images) || !images.length > 0\r\n      ? -1\r\n      : images.length;\r\n\r\n  // Calculating styles depending on gallery height and current image index\r\n  $: galleryStyles = () => {\r\n    const galleryHeight = height || \"400px\";\r\n    const galleryMaxWidth = maxWidth ? ` max-width: ${maxWidth};` : \"\";\r\n    const imgUrl =\r\n      imageCount > -1\r\n        ? ` background-image: url(${images[currentImageIndex]});`\r\n        : \"\";\r\n\r\n    return `height: ${galleryHeight};${galleryMaxWidth} ${imgUrl}`;\r\n  };\r\n\r\n  /**\r\n   * Event handler for button 'next'\r\n   *\r\n   * @param {number} direction - can be -1 for back or 1 for next image\r\n   */\r\n  const setNextImage = direction => {\r\n    currentImageIndex += direction;\r\n  };\r\n\r\n  /**\r\n   * Event handler for navigation control index buttons\r\n   * Sets the current image index to the given image index\r\n   *\r\n   * @param {number} imageIndex - the image index we will navigate to\r\n   */\r\n  const navigateToIndex = imageIndex => {\r\n    currentImageIndex = imageIndex.detail;\r\n  };\r\n\r\n  /**\r\n   * This method waits an amout of ms and then sets the current image index +1\r\n   * It is called as long as 'keepAutoRunning' var is true\r\n   * Start/stop is triggert by the reactive statement '$: galleryStyles'\r\n   */\r\n  const doAutorun = async () => {\r\n    await wait(timer); // Just wait\r\n\r\n    if (keepAutorunRunning) {\r\n      // Checking here allows us to stop earlier, if autorun was stopped\r\n      if (currentImageIndex < imageCount - 1) {\r\n        currentImageIndex += 1; // goto next image\r\n      } else {\r\n        currentImageIndex = 0; // jump back to first image\r\n      }\r\n\r\n      doAutorun(timer);\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .gallery {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\r\n    border-radius: 0.25rem;\r\n\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n  }\r\n</style>\r\n\r\n<div on:clack={setNextImage} class=\"gallery component\" style={galleryStyles()}>\r\n\r\n  {#if imageCount < 0}\r\n    <Loader class=\"loader\" />\r\n  {/if}\r\n\r\n  <GalleryNavButton\r\n    position=\"left\"\r\n    visible={imageCount > -1 && currentImageIndex > 0}\r\n    on:navigate={() => setNextImage(-1)} />\r\n  <GalleryNavButton\r\n    position=\"right\"\r\n    visible={imageCount > -1 && currentImageIndex < images.length - 1}\r\n    on:navigate={() => setNextImage(1)} />\r\n\r\n  <GalleryControls\r\n    numberOfImages={imageCount}\r\n    currentIndex={currentImageIndex}\r\n    on:navigateToIndex={navIndex => navigateToIndex(navIndex)} />\r\n</div>\r\n","<script>\r\n  // Importing livecycle  methods\r\n  import { onMount } from \"svelte\";\r\n\r\n  // Importing our components\r\n  import Gallery from \"./components/Gallery.svelte\";\r\n\r\n  // Import the helper classes and fake data\r\n  import { images } from \"./Helpers.js\";\r\n\r\n  // Local vars\r\n  let galleryHeight = \"460px\";\r\n  let maxWith = \"940px\";\r\n\r\n  let enableAutorun = false;\r\n  let timer = 2000;\r\n\r\n  /**\r\n   * Init the first combination on page load\r\n   */\r\n  onMount(() => {\r\n    // Here we preload the images into the browser cache to display them faster in the gallery later on\r\n    for (let imgUrl of images) {\r\n      let image = new Image();\r\n      image.onload = function() {\r\n        // console.log(\r\n        //   `:: image '${imgUrl}' downloaded wih size ${this.naturalWidth} x ${\r\n        //     this.naturalHeight\r\n        //   }`\r\n        // );\r\n      };\r\n      image.src = imgUrl;\r\n    }\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    width: 80%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  .gallery {\r\n    margin-top: 2rem;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <h1>Svelte Gallery example</h1>\r\n  <div>\r\n    <label>\r\n      <input class=\"autorun\" type=\"checkbox\" bind:checked={enableAutorun} />\r\n      Enable Autorun\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"gallery\">\r\n    <Gallery\r\n      {images}\r\n      height={galleryHeight}\r\n      maxWidth={maxWith}\r\n      autoRun={enableAutorun}\r\n      {timer} />\r\n  </div>\r\n</div>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'Welt'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","flush","seen_callbacks","Set","length","shift","update","callback","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","outroing","outros","transition_in","block","local","i","delete","transition_out","o","d","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","key","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","hydrate","l","Array","from","childNodes","c","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","images","arrowClass","containerClass","onClick","visible","position","dispatch","idx","currentIndex","click_handler","iter","iterations","numberOfImages","toIndex","imageCount","currentImageIndex","galleryStyles","setNextImage","remaining","height","maxWidth","autoRun","timer","keepAutorunRunning","direction","navigateToIndex","imageIndex","doAutorun","async","ms","setTimeout","wait","isArray","galleryHeight","maxWith","enableAutorun","imgUrl","image","Image","onload","src","body"],"mappings":"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"}